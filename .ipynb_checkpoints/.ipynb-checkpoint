{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center> Analysis and Pre-processing of the expert data collected </center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this script we analyze the expert data that we have collected, and apply some preprocessing to the states and the action data.<br>\n",
    "<b>NB</b>: The expert_data%.pkl files are not available due to their sizes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import pickle\n",
    "import gzip\n",
    "from utils import preprocessing, action_to_id, check_valid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total number of samples is  33333\n"
     ]
    }
   ],
   "source": [
    "## Load the data created\n",
    "\n",
    "n_episodes = 17\n",
    "\n",
    "dataframes = []\n",
    "total = 0\n",
    "for i in range(1,n_episodes):\n",
    "    \n",
    "    with open(\"./expert_data/expert_data\" + str(i) +\".pkl\", \"rb\") as f:\n",
    "        df = pickle.load(f)\n",
    "        total += len(df[\"state\"])\n",
    "        dataframes.append(df)\n",
    "\n",
    "print(\"The total number of samples is \", total)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We are discarding the first 50 samples from each episode since the do not contain useful informations for the agent, namely the \"zooming scene\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Collect states, actions and rewards\n",
    "\n",
    "states = []\n",
    "actions = []\n",
    "rewards = []\n",
    "\n",
    "for d in dataframes:\n",
    "    states.append(np.array(d[\"state\"][50:]))\n",
    "    actions.append(np.array(d[\"action\"][50:]))\n",
    "    rewards.append(np.array(d[\"reward\"][50:]))\n",
    "    \n",
    "X = np.concatenate(states, axis = 0)\n",
    "labels = np.concatenate(actions, axis = 0)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can look at a plot of the total rewards for each episode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average reward is 788.789591 +/- 52.310153\n"
     ]
    }
   ],
   "source": [
    "total_rev = np.array([r.sum() for r in rewards])\n",
    "plt.figure(figsize = (15, 6))\n",
    "ax = sns.lineplot(data = total_rev)\n",
    "ax.set(xlabel='Episode', ylabel='Total reward')\n",
    "plt.show()\n",
    "\n",
    "print(\"The average reward is %f +/- %f\" % (total_rev.mean(), total_rev.std()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will now check if there are any invalid actions, i.e. those that could not be classified by the agent's model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "mask = [check_valid(a) for a in labels]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of invalid actions is  13\n"
     ]
    }
   ],
   "source": [
    "print(\"The number of invalid actions is \", len([m for m in mask if m == False]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_masked = X[mask]\n",
    "labels_masked = labels[mask]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "label_proc, labels_id = action_to_id(labels_masked)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is interesting to look at the distribution of actions performed by the expert"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2e116691448>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bars = []\n",
    "for i in range(0, 5):\n",
    "    bars.append(len([x for x in labels_id if x == i]))\n",
    "\n",
    "plt.figure(figsize = (15, 6))\n",
    "sns.barplot(x = [\"Straight\", \"Accelerate\", \"Right\", \"Brake\", \"Left\"], y = bars)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the action \"Straight\" is prevalent, possibly due to the track requiring no acceleration, steering or brake action for most of its length. One possible solution would be to remove some of the sample corresponding to the \"Straight\" action, in order to balance the distribution. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Image Pre-processing </h2>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can inspect a sample image associated to a state"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "sample_state = X_masked[678]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (15, 10))\n",
    "plt.imshow(sample_state, interpolation='nearest')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the grass has two colors for the green, and we can then recolor it.<br>\n",
    "Moreover, we can crop the image fro 96 x 96 to 80 x 90 to exclude the portion containing the bar, and reduce size.<br>\n",
    "Finally, we noitced that by keeping a single channel (namely the green) we obtain better black and white version"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize = (15, 10))\n",
    "plt.imshow(preprocessing(sample_state), interpolation='nearest', cmap='binary')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can apply now apply the pre-proccessing to the whole X_masked array."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_proc = np.array([preprocessing(x) for x in X_masked])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can save the numpy array X_proc and labels_proc to disk.<br>\n",
    "They will be used by the agent for imitation learning."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('./data/X.npy', 'wb') as f:\n",
    "    np.save(f, X_proc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('./data/X.npy', 'rb') as f:\n",
    "    content = f.read()\n",
    "    with gzip.open('./data/X.npy.gzip', 'wb') as g:    \n",
    "        g.write(content)\n",
    "        g.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('./data/y.npy', 'wb') as f:\n",
    "    np.save(f, label_proc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('./data/y.npy', 'rb') as f:\n",
    "    content = f.read()\n",
    "    with gzip.open('./data/y.npy.gzip', 'wb') as g:    \n",
    "        g.write(content)\n",
    "        g.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
